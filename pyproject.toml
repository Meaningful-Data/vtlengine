[project]
name = "vtlengine"
version = "1.2.0"
description = "Run and Validate VTL Scripts"
license = "AGPL-3.0"
readme = "README.md"
requires-python = ">=3.9"
authors = [
    {name = "MeaningfulData", email = "info@meaningfuldata.eu"},
]
maintainers = [
    {name = "Francisco Javier Hernandez del Caño", email = "javier.hernandez@meaningfuldata.eu"},
    {name = "Alberto Hernandez del Caño", email = "alberto.hernandez@meaningfuldata.eu"},
    {name = "Mateo de Lorenzo Argeles", email = "mateo.delorenzo@meaningfuldata.eu"}
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "Typing :: Typed"
]
keywords = ['vtl', 'sdmx', 'vtlengine', 'Validation and Transformation Language']

dependencies = [
    # PyPi dependencies
    "duckdb>=1.1,<1.2",
    "pysdmx[xml]>=1.4.0rc1,<2.0",
    # APT-supported dependencies
    "jsonschema>=3.2.0,<5.0",
    "sqlglot>=22.2.0,<23.0",
    "antlr4-python3-runtime>=4.13.2,<4.14",
    "pandas>=2.1.4,<3.0",
    "networkx>=2.8,<3.0",
    "numpy>=1.23.2,<2 ; python_version < '3.13'",
    "numpy>=2.1.0; python_version >= '3.13'",
]

[project.optional-dependencies]
s3 = ["s3fs>=2022.11.0,<2023.0", "fsspec>=2022.11.0,<2023.0"]
all = ["s3fs>=2022.11.0,<2023.0", "fsspec>=2022.11.0,<2023.0"]

[project.urls]
Repository = 'https://github.com/Meaningful-Data/vtlengine'
Documentation = 'https://docs.vtlengine.meaningfuldata.eu'
MeaningfulData = 'https://www.meaningfuldata.eu/'
IssueTracker = 'https://github.com/Meaningful-Data/vtlengine/issues'
Authors = 'https://github.com/Meaningful-Data/vtlengine/graphs/contributors'

[tool.poetry.dependencies]
python = ">=3.9,<4.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.4"
pytest-cov = "^6.2.1"
pytest-xdist = "^3.8.0"
line-profiler-pycharm = "^1.2.0"
mypy = "1.16.1"
pandas-stubs = "2.2.2.240807"
ruff = "^0.12.3"
types-jsonschema = "4.24.0.20250708"

[tool.poetry.group.docs.dependencies]
sphinx = "^7.4.7"
sphinx-rtd-theme = "^3.0.2"
toml = "^0.10.2"



[tool.ruff]
line-length = 100
lint.mccabe.max-complexity = 20
lint.select = [
    "B", "B9", "C", "C4", "D", "E", "F", "I", "PT", "S", "SIM", "W"
]
# TODO: check S608 (duckdb querys)
lint.ignore = ["B023", "B028", "B904", "C403", "D100", "D101", "D102", "D103", "D104", "D105",
    "D107", "D200", "D201", "D202", "D203", "D205", "D209", "D212", "D213", "D301",
    "D400", "D401", "D404", "D411", "D413", "D415", "D419", "E203", "S608"]
lint.exclude = ["*/Grammar/*"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "PT006", "PT012", "PT013", "E501", "W605"]
"src/vtlengine/*" = ["E712"]

[tool.mypy]
files = "src"
exclude = "src/vtlengine/AST/.*"
disallow_untyped_defs = true
disallow_untyped_calls = true
ignore_errors = false
no_implicit_optional = true
show_column_numbers = true
strict_equality = true
strict_optional = true
strict = true
enable_error_code = [
    "ignore-without-code",
    "redundant-expr",
    "truthy-bool",
]
warn_return_any = false

[tool.pytest.ini_options]
addopts = "--strict-markers"
markers = [
    "input_path: directory where tests data files are stored"
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
