/*******************************************************************************
*       Module A01
*******************************************************************************/
A01.HD_OFFC := RIAD_RLTNSHP_D [ sub TYP_RLTNSHP_RIAD = "IS_BRNCH" ] [ rename SRC_ENTTY_RIAD_ID to ENTTY_RIAD_ID ] [ calc HD_OFFC_UNDRT_ID := TRGT_ENTTY_RIAD_ID ] [ keep HD_OFFC_UNDRT_ID ] ; 
A01.HD_OFFC_MX := max ( A01.HD_OFFC group by VLD_FRM , ENTTY_RIAD_ID ) ; 
A01.INMDT_PRNT := RIAD_RLTNSHP_D [ sub TYP_RLTNSHP_RIAD = "IS_DRCT_PRNT" ] [ rename SRC_ENTTY_RIAD_ID to ENTTY_RIAD_ID ] [ calc IMMDT_PRNT_UNDRT_ID := TRGT_ENTTY_RIAD_ID ] [ keep IMMDT_PRNT_UNDRT_ID ] ; 
A01.INMDT_PRNT_MX := max ( A01.INMDT_PRNT group by VLD_FRM , ENTTY_RIAD_ID ) ; 
A01.ULTMT_PRNT := RIAD_RLTNSHP_D [ sub TYP_RLTNSHP_RIAD = "IS_ULTMT_PRNT" ] [ rename SRC_ENTTY_RIAD_ID to ENTTY_RIAD_ID ] [ calc ULTMT_PRNT_UNDRT_ID := TRGT_ENTTY_RIAD_ID ] [ keep ULTMT_PRNT_UNDRT_ID ] ; 
A01.ULTMT_PRNT_MX := max ( A01.ULTMT_PRNT group by VLD_FRM , ENTTY_RIAD_ID ) ; 
A01.LEI_DS := RIAD_ENTTY_CD_D [ sub TYP_ENTTY_CD = "LEI" ] [ rename ENTTY_CD to LEI ] [ keep LEI ] ; 
A01.LEI_DS_MX := max ( A01.LEI_DS group by VLD_FRM , ENTTY_RIAD_ID ) ; 
A01.ENTTY_HD_OFFC := left_join ( RIAD_ENTTY_D , A01.HD_OFFC_MX , A01.INMDT_PRNT_MX , A01.ULTMT_PRNT_MX , A01.LEI_DS_MX ) ; 
A01.ENTTY_TM_CHNG := A01.ENTTY_HD_OFFC [ calc identifier DT_RFRNC := cast ( "2018-31-12" , date ) ] [ filter VLD_FRM <= DT_RFRNC and VLD_T >= DT_RFRNC ] ; 
A01.ANAMART_ENTTY_TM_P := min ( A01.ENTTY_TM_CHNG group except VLD_FRM ) ; 
A01.ANAMART_ENTTY_TM := A01.ANAMART_ENTTY_TM_P [ calc IS_ANCRDT_RPRTNG := if ANCRDT_TYP_SBMSSN in { "1" , "2" } then "T" else "F" ] [ drop VLD_T ] ; 
/*******************************************************************************
*       Module A02
*******************************************************************************/
A02.LE := A01.ANAMART_ENTTY_TM [ filter isnull ( HD_OFFC_UNDRT_ID ) ] ; 
A02.NLE := A01.ANAMART_ENTTY_TM [ filter not isnull ( HD_OFFC_UNDRT_ID ) ] ; 
A02.LE2 := A02.LE [ rename LGL_FRM to LGL_FRM_LE , IS_ANCRDT_RPRTNG to IS_LGL_ENTTY_ANCRDT_CVRD , ANNL_TRNVR to ANNL_TRNVR_LE , BLNC_SHT_TTL to BLNC_SHT_TTL_LE , DT_ENTRPRS_SZ to DT_ENTRPRS_SZ_LE , DT_INTTN_LGL_PRCDNGS to DT_INTTN_LGL_PRCDNGS_LE , ENTRPRS_SZ to ENTRPRS_SZ_LE , LGL_PRCDNG_STTS to LGL_PRCDNG_STTS_LE , NMBR_EMPLYS to NMBR_EMPLYS_LE ] ; 
A02.LE_3 := A02.LE2 [ calc CNTRY_LE := CNTRY , CTY_LE := CTY , ECNMC_ACTVTY_LE := ECNMC_ACTVTY , ENTTY_RIAD_CD_LE := ENTTY_RIAD_CD , ENTTY_RIAD_ID_LE := ENTTY_RIAD_ID , INSTTTNL_SCTR_DTL_LE := INSTTTNL_SCTR_DTL , INSTTTNL_SCTR_LE := INSTTTNL_SCTR , NM_ENTTY_LE := NM_ENTTY , PSTL_CD_LE := PSTL_CD , STRT_LE := STRT , TRRTRL_UNT_LE := TRRTRL_UNT ] ; 
A02.LE_FLL := A02.LE_3 [ calc IS_LGL_ENTTY_EA_ANCRDT_CVRD := if ( CNTRY_LE in anaCreditCountries ) then IS_LGL_ENTTY_ANCRDT_CVRD else "F" ] ; 
A02.LE_JN := A02.LE_FLL [ keep LGL_FRM_LE , IS_LGL_ENTTY_ANCRDT_CVRD , ANNL_TRNVR_LE , BLNC_SHT_TTL_LE , DT_ENTRPRS_SZ_LE , DT_INTTN_LGL_PRCDNGS_LE , ENTRPRS_SZ_LE , LGL_PRCDNG_STTS_LE , NMBR_EMPLYS_LE , CNTRY_LE , CTY_LE , ECNMC_ACTVTY_LE , ENTTY_RIAD_CD_LE , INSTTTNL_SCTR_DTL_LE , INSTTTNL_SCTR_LE , NM_ENTTY_LE , PSTL_CD_LE , STRT_LE , TRRTRL_UNT_LE , ENTTY_RIAD_ID_LE , IS_LGL_ENTTY_EA_ANCRDT_CVRD ] ; 
A02.NLE2 := inner_join ( A02.NLE , A02.LE_JN [ rename ENTTY_RIAD_ID to HD_OFFC_UNDRT_ID ] as B using DT_RFRNC , HD_OFFC_UNDRT_ID ) ; 
A02.DBTR := union ( A02.NLE2 [ drop LGL_FRM , LGL_PRCDNG_STTS , DT_INTTN_LGL_PRCDNGS , ENTRPRS_SZ , DT_ENTRPRS_SZ , NMBR_EMPLYS , BLNC_SHT_TTL , ANNL_TRNVR , IS_ANCRDT_RPRTNG ] , A02.LE_FLL ) ; 
A02.ANAMART_ENTTY_LE := A02.DBTR [ keep IMMDT_PRNT_UNDRT_ID , LEI , ULTMT_PRNT_UNDRT_ID , CNTRY , CTY , ECNMC_ACTVTY , ENTTY_RIAD_CD , INSTTTNL_SCTR_DTL , INSTTTNL_SCTR , NM_ENTTY , PSTL_CD , STRT , TRRTRL_UNT , CNTRY_LE , CTY_LE , ECNMC_ACTVTY_LE , ENTTY_RIAD_CD_LE , INSTTTNL_SCTR_DTL_LE , INSTTTNL_SCTR_LE , NM_ENTTY_LE , PSTL_CD_LE , STRT_LE , TRRTRL_UNT_LE , ANNL_TRNVR_LE , BLNC_SHT_TTL_LE , DT_ENTRPRS_SZ_LE , DT_INTTN_LGL_PRCDNGS_LE , ENTRPRS_SZ_LE , LGL_FRM_LE , LGL_PRCDNG_STTS_LE , NMBR_EMPLYS_LE , IS_LGL_ENTTY_ANCRDT_CVRD , IS_LGL_ENTTY_EA_ANCRDT_CVRD , ACCNTNG_FRMWRK_SL , DT_BRTH , DT_CLS ] ; 
/*******************************************************************************
*       Module A03
*******************************************************************************/
A03.DBTR_FCT := ANCRDT_INSTRMNT_FCT [ keep OTSTNDNG_NMNL_AMNT_DV , OTSTNDNG_NMNL_AMNT_CV ] [ rename DBTR_ID to ENTTY_RIAD_ID ] ; 
A03.DBTR_FCT_TTL := sum ( A03.DBTR_FCT group by DT_RFRNC , ENTTY_RIAD_ID ) ; 
A03.DBTR_FCT_NN_PRFRMNG := ANCRDT_INSTRMNT_FCT [ keep OTSTNDNG_NMNL_AMNT_DV , OTSTNDNG_NMNL_AMNT_CV , PRFRMNG_STTS ] [ rename DBTR_ID to ENTTY_RIAD_ID ] [ filter PRFRMNG_STTS = "1" ] [ drop PRFRMNG_STTS ] ; 
A03.DBTR_FCT_TTL_NN_PFRMNG := sum ( A03.DBTR_FCT_NN_PRFRMNG group by DT_RFRNC , ENTTY_RIAD_ID ) ; 
A03.DBTR_FCT_JN := left_join ( A03.DBTR_FCT_TTL [ rename OTSTNDNG_NMNL_AMNT_DV to DV_TTL , OTSTNDNG_NMNL_AMNT_CV to CV_TTL ] as A , A03.DBTR_FCT_TTL_NN_PFRMNG ) ; 
A03.ANAMART_ENTTY_PRFRMNG_P := A03.DBTR_FCT_JN [ calc CV_NPL_RT := OTSTNDNG_NMNL_AMNT_CV / CV_TTL , DV_NPL_RT := OTSTNDNG_NMNL_AMNT_DV / DV_TTL , NPL_RT := OTSTNDNG_NMNL_AMNT_DV / DV_TTL ] [ drop OTSTNDNG_NMNL_AMNT_CV , CV_TTL , OTSTNDNG_NMNL_AMNT_DV , DV_TTL ] ; 
A03.ANAMART_ENTTY_PRFRMNG := nvl ( A03.ANAMART_ENTTY_PRFRMNG_P , 0 ) ; 
/*******************************************************************************
*       Module A04
*******************************************************************************/
A04.DBTR_FCT_DYS := ANCRDT_INSTRMNT_FCT [ keep RSDL_MTRTY , PST_D_DYS , OTSTNDNG_NMNL_AMNT_CV ] [ rename DBTR_ID to ENTTY_RIAD_ID ] ; 
A04.VRBLS_MAX_P := A04.DBTR_FCT_DYS [ keep RSDL_MTRTY , PST_D_DYS ] [ rename RSDL_MTRTY to MAX_RSDL_MTRTY_DYS , PST_D_DYS to MAX_PST_D_DYS ] ; 
A04.VRBLS_MAX := max ( A04.VRBLS_MAX_P group by DT_RFRNC , ENTTY_RIAD_ID ) ; 
A04.RSDL_MRTY_WA := A04.DBTR_FCT_DYS [ keep RSDL_MTRTY , OTSTNDNG_NMNL_AMNT_CV ] ; 
A04.DNMNTR_P := A04.RSDL_MRTY_WA [ keep OTSTNDNG_NMNL_AMNT_CV ] [ rename OTSTNDNG_NMNL_AMNT_CV to TTL_CV_OTSTNDNG_NMNL_AMNT ] ; 
A04.DNMNTR := sum ( A04.DNMNTR_P group by DT_RFRNC , ENTTY_RIAD_ID ) ; 
A04.RSDL_MRTY_WA_JN := inner_join ( A04.RSDL_MRTY_WA , A04.DNMNTR using DT_RFRNC , ENTTY_RIAD_ID ) ; 
A04.RSDL_MRTY_WA_P := A04.RSDL_MRTY_WA_JN [ calc RSDL_MTRTY_DYS_WGHTD_AVRG := RSDL_MTRTY * OTSTNDNG_NMNL_AMNT_CV / TTL_CV_OTSTNDNG_NMNL_AMNT ] [ keep RSDL_MTRTY_DYS_WGHTD_AVRG ] ; 
A04.RSDL_MRTY_WA_FNL := sum ( A04.RSDL_MRTY_WA_P group by DT_RFRNC , ENTTY_RIAD_ID ) ; 
A04.ANAMART_ENTTY_DYS := inner_join ( A04.VRBLS_MAX , A04.RSDL_MRTY_WA_FNL ) ; 
/*******************************************************************************
*       Module A05
*******************************************************************************/
A05.ENTTY_RSK_PD := ENTTY_RSK [ keep PD ] [ rename ENTTY_RIAD_ID to DBTR_ID ] ; 
A05.ENTTY_RSK_AGG := A05.ENTTY_RSK_PD [ aggr INDSTRY_PD_SMPL_AVRG := avg ( PD ) , INDSTRY_PD_SD := stddev_pop ( PD ) group by DBTR_ID , DT_RFRNC ] ; 
A05.ONA_P := ANCRDT_INSTRMNT_FCT [ keep OTSTNDNG_NMNL_AMNT_CV ] ; 
A05.ONA := sum ( A05.ONA_P group by OBSRVD_AGNT_ID , DT_RFRNC , DBTR_ID ) ; 
A05.ENTTY_RSK_ONA := inner_join ( A05.ENTTY_RSK_PD , A05.ONA ) ; 
A05.DNMNTR_P := A05.ENTTY_RSK_ONA [ keep OTSTNDNG_NMNL_AMNT_CV ] [ rename OTSTNDNG_NMNL_AMNT_CV to TTL_CV_OTSTNDNG_NMNL_AMNT ] ; 
A05.DNMNTR := sum ( A05.DNMNTR_P group by DT_RFRNC , DBTR_ID ) ; 
A05.ENTTY_RSK_ONA2 := inner_join ( A05.ENTTY_RSK_ONA , A05.DNMNTR using DT_RFRNC , DBTR_ID ) ; 
A05.ENTTY_RSK_ONA3 := A05.ENTTY_RSK_ONA2 [ calc INDSTRY_PD_WGHTD_AVRG := PD * OTSTNDNG_NMNL_AMNT_CV / TTL_CV_OTSTNDNG_NMNL_AMNT ] [ keep INDSTRY_PD_WGHTD_AVRG ] ; 
A05.ENTTY_RSK_ONA4 := sum ( A05.ENTTY_RSK_ONA3 group by DT_RFRNC , DBTR_ID ) ; 
A05.ANAMART_ENTTY_RSK_P := inner_join ( A05.ENTTY_RSK_AGG , A05.ENTTY_RSK_ONA4 ) ; 
A05.ANAMART_ENTTY_RSK := A05.ANAMART_ENTTY_RSK_P [ rename DBTR_ID to ENTTY_RIAD_ID ] ; 
/*******************************************************************************
*       Module A06
*******************************************************************************/
A06.DBTR_GGRPHCL := A02.ANAMART_ENTTY_LE [ keep CNTRY , CNTRY_LE ] ; 
A06.ANAMART_ENTTY_GGRPHCL_P := A06.DBTR_GGRPHCL [ calc IS_DMSTC := if CNTRY = CNTRY_LE then "T" else "F" ] ; 
A06.ANAMART_ENTTY_GGRPHCL := A06.ANAMART_ENTTY_GGRPHCL_P [ calc IS_EA_ACTIVITY := if CNTRY in { "AT" , "BE" , "CY" , "DE" , "EE" , "ES" , "FI" , "FR" , "GR" , "IE" , "IT" , "LT" , "LU" , "LV" , "MT" , "NL" , "PT" , "SI" , "SK" } then "T" else "F" ] [ drop CNTRY , CNTRY_LE ] ; 
/*******************************************************************************
*       Module A07
*******************************************************************************/
A07.ANAMART_ENTTY := inner_join ( A02.ANAMART_ENTTY_LE , A03.ANAMART_ENTTY_PRFRMNG , A04.ANAMART_ENTTY_DYS , A05.ANAMART_ENTTY_RSK , A06.ANAMART_ENTTY_GGRPHCL ) ; 
A07.ANCRDT_DBTR := inner_join ( A07.ANAMART_ENTTY [ drop ACCNTNG_FRMWRK_SL ] as A , ENTTY_INSTRMNT [ filter ENTTY_RL = "2" ] as B using DT_RFRNC , ENTTY_RIAD_ID ) ; 
ANCRDT_DBTR_NN_ANNYMSD_D_1 <- A07.ANCRDT_DBTR ; 
ANCRDT_DBTR_ANNYMSD_D_1 <- A07.ANCRDT_DBTR ; 
A07.ANCRDT_CRDTR := inner_join ( A07.ANAMART_ENTTY [ drop CV_NPL_RT , DV_NPL_RT , INDSTRY_PD_SD , INDSTRY_PD_SMPL_AVRG , INDSTRY_PD_WGHTD_AVRG , MAX_PST_D_DYS , MAX_RSDL_MTRTY_DYS , RSDL_MTRTY_DYS_WGHTD_AVRG ] as A , ENTTY_INSTRMNT [ filter ENTTY_RL = "1" ] as B using DT_RFRNC , ENTTY_RIAD_ID ) ; 
ANCRDT_CRDTR_NN_ANNYMSD_D_1 <- A07.ANCRDT_CRDTR ; 
ANCRDT_CRDTR_ANNYMSD_D_1 <- A07.ANCRDT_CRDTR ; 
/*******************************************************************************
*       Module B01
*******************************************************************************/
B01.INSTRMNT_FCT_1 := ENTTY_INSTRMNT [ filter ENTTY_RL in { "1" , "2" , "7" } ] ; 
B01.ANCRDT_RPRTNG_ENTTY := A01.ANAMART_ENTTY_TM [ keep IS_ANCRDT_RPRTNG ] [ filter IS_ANCRDT_RPRTNG = "T" ] ; 
B01.INSTRMNT_FCT_2 := left_join ( B01.INSTRMNT_FCT_1 , B01.ANCRDT_RPRTNG_ENTTY using ENTTY_RIAD_ID , DT_RFRNC ) ; 
B01.INSTRMNT_FCT_3 := B01.INSTRMNT_FCT_2 [ filter ENTTY_RL in { "2" , "7" } or ( ENTTY_RL = "1" and ( isnull ( IS_ANCRDT_RPRTNG ) or ENTTY_RIAD_ID = OBSRVD_AGNT_ID ) ) ] [ drop IS_ANCRDT_RPRTNG ] ; 
B01.INSTRMNT_FCT_CRDTR := B01.INSTRMNT_FCT_3 [ rename ENTTY_RIAD_ID to CRDTR_ID ] [ filter ENTTY_RL = "1" ] ; 
B01.INSTRMNT_FCT_DBTR := B01.INSTRMNT_FCT_3 [ rename ENTTY_RIAD_ID to DBTR_ID ] [ filter ENTTY_RL = "2" ] ; 
B01.INSTRMNT_FCT_SRVCR := B01.INSTRMNT_FCT_3 [ rename ENTTY_RIAD_ID to SRVCR_ID ] [ filter ENTTY_RL = "7" ] ; 
B01.INSTRMNT_FCT_4 := eval ( instrFctJn ( B01.INSTRMNT_FCT_CRDTR , B01.INSTRMNT_FCT_DBTR ) language "sqlite" returns dataset { identifier < string > CNTRCT_ID , identifier < date > DT_RFRNC , identifier < string > DBTR_ID , identifier < string > INSTRMNT_ID , identifier < string > OBSRVD_AGNT_ID , measure < number > JNT_LBLTY_AMNT , identifier < string > CRDTR_ID , measure < number > SRVCR_ID } ) ; 
B01.ANAMART_INSTRMNT_JN := left_join ( B01.INSTRMNT_FCT_4 , INSTRMNT , FNNCL [ rename TRNSFRRD_AMNT to TRNSFRRD_AMNT_INSTRMNT ] as F , ACCNTNG using OBSRVD_AGNT_ID , DT_RFRNC , CNTRCT_ID , INSTRMNT_ID keep ACCNTNG_CLSSFCTN , ANNLSD_AGRD_RT , CRRNCY_DNMNTN , DT_END_INTRST_ONLY , DT_FRBRNC_STTS , DT_INCPTN , DT_LGL_FNL_MTRTY , DT_NXT_INTRST_RT_RST , DT_PRFRMNG_STTS , DT_PST_D , DT_STTLMNT , FDCRY , FRBRNC_STTS , IMPRMNT_ASSSSMNT_MTHD , IMPRMNT_STTS , INTRST_RT_CP , INTRST_RT_FLR , INTRST_RT_RST_FRQNCY , INTRST_RT_SPRD , JNT_LBLTY_AMNT , PRDNTL_PRTFL , PRFRMNG_STTS , PRJCT_FNNC_LN , PRPS , PYMNT_FRQNCY , RCGNTN_STTS , RCRS , RFRNC_RT , RPYMNT_RGHTS , SBRDNTD_DBT , SRC_ENCMBRNC , SYNDCTD_CNTRCT_ID , TRNSFRRD_AMNT_INSTRMNT , TYP_AMRTSTN , TYP_INSTRMNT , TYP_INTRST_RT , TYP_SCRTSTN ) ; 
/*******************************************************************************
*       Module B02
*******************************************************************************/
B02.LST_DBTRS := B01.INSTRMNT_FCT_3 [ filter ENTTY_RL = "2" ] ; 
B02.SUM_JNT_LBLTY_P := sum ( B02.LST_DBTRS group by OBSRVD_AGNT_ID , DT_RFRNC , CNTRCT_ID , INSTRMNT_ID ) ; 
B02.SUM_JNT_LBLTY := B02.SUM_JNT_LBLTY_P [ rename JNT_LBLTY_AMNT to TTL_LBLTY_AMNT ] ; 
B02.NMBR_DBTRS_PR_INSTRMNT_P := count ( B02.LST_DBTRS group by OBSRVD_AGNT_ID , DT_RFRNC , CNTRCT_ID , INSTRMNT_ID ) ; 
B02.NMBR_DBTRS_PR_INSTRMNT := B02.NMBR_DBTRS_PR_INSTRMNT_P [ rename int_var to NMBR_DBTR ] ; 
B02.INSTRMNT_FCT_JNT_LBLTY := inner_join ( B01.INSTRMNT_FCT_4 , B02.SUM_JNT_LBLTY , FNNCL [ keep OTSTNDNG_NMNL_AMNT ] [ rename OTSTNDNG_NMNL_AMNT to OTSTNDNG_NMNL_AMNT_INSTRMNT ] as FNNCL_AS , B02.NMBR_DBTRS_PR_INSTRMNT ) ; 
B02.ANAMART_INSTRMNT_SHR_ONA_DBTR := B02.INSTRMNT_FCT_JNT_LBLTY [ calc SHR_ONA_DBTR_DV := if OTSTNDNG_NMNL_AMNT_INSTRMNT = 0.0 then 1 / NMBR_DBTR else JNT_LBLTY_AMNT / OTSTNDNG_NMNL_AMNT_INSTRMNT , SHR_ONA_DBTR_CV := if OTSTNDNG_NMNL_AMNT_INSTRMNT = 0.0 then 1 / NMBR_DBTR else JNT_LBLTY_AMNT / TTL_LBLTY_AMNT ] [ keep SHR_ONA_DBTR_CV , SHR_ONA_DBTR_DV , NMBR_DBTR , OTSTNDNG_NMNL_AMNT_INSTRMNT ] ; 
/*******************************************************************************
*       Module B03
*******************************************************************************/

B03.INSTRMNT_FCT_CRDTR_NLL := B01.INSTRMNT_FCT_1 [ filter ENTTY_RL = "1" ] ; 
B03.INSTRMNT_FCT_CRDTR := B03.INSTRMNT_FCT_CRDTR_NLL [ calc col := if isnull ( JNT_LBLTY_AMNT ) then 0.0 else JNT_LBLTY_AMNT ] [ drop JNT_LBLTY_AMNT ] ; 
B03.NMBR_CRDTRS_PR_INSTRMNT_P := count ( B03.INSTRMNT_FCT_CRDTR group by OBSRVD_AGNT_ID , DT_RFRNC , CNTRCT_ID , INSTRMNT_ID ) ; 
B03.NMBR_CRDTRS_PR_INSTRMNT := B03.NMBR_CRDTRS_PR_INSTRMNT_P [ rename int_var to NMBR_CRDTR ] ; 

B03.INSTRMNT_FCT_CRDTR_NOA := B03.INSTRMNT_FCT_CRDTR [ filter ENTTY_RIAD_ID <> OBSRVD_AGNT_ID ] ; 
B03.NMBR_CRDTRS_NT_OA_P := count ( B03.INSTRMNT_FCT_CRDTR_NOA group by OBSRVD_AGNT_ID , DT_RFRNC , CNTRCT_ID , INSTRMNT_ID ) ; 
B03.NMBR_CRDTRS_NT_OA_D := B03.NMBR_CRDTRS_NT_OA_P [ rename int_var to NMBR_CRDTRS_NT_OA ] ; 

B03.INSTRMNT_FCT_TRNSFRRD_AMNT := left_join ( B01.INSTRMNT_FCT_4 , FNNCL [ keep OTSTNDNG_NMNL_AMNT , TRNSFRRD_AMNT ] as FNNCL_AS , B03.NMBR_CRDTRS_PR_INSTRMNT , B03.NMBR_CRDTRS_NT_OA_D using OBSRVD_AGNT_ID , DT_RFRNC , CNTRCT_ID , INSTRMNT_ID ) ; 

B03.ANAMART_INSTRMNT_SHR_ONA_CRDTR := B03.INSTRMNT_FCT_TRNSFRRD_AMNT [ calc SHR_ONA_CRDTR := if OTSTNDNG_NMNL_AMNT = 0 then 1 / NMBR_CRDTR else ( if OBSRVD_AGNT_ID = CRDTR_ID then ( OTSTNDNG_NMNL_AMNT - TRNSFRRD_AMNT ) / OTSTNDNG_NMNL_AMNT else ( if OTSTNDNG_NMNL_AMNT * NMBR_CRDTRS_NT_OA = 0.0 then 1 else TRNSFRRD_AMNT / ( OTSTNDNG_NMNL_AMNT * NMBR_CRDTRS_NT_OA ) ) ) ] [ keep SHR_ONA_CRDTR ] ; 
/*******************************************************************************
*       Module B04
*******************************************************************************/
B04.INSTRMNT_PRTCTN_TTL_INSTRMNT := sum ( INSTRMNT_PRTCTN_RCVD group by OBSRVD_AGNT_ID , DT_RFRNC , CNTRCT_ID , INSTRMNT_ID ) ; 
B04.INSTRMNT_FCT_CV_1 := inner_join ( B02.ANAMART_INSTRMNT_SHR_ONA_DBTR , B03.ANAMART_INSTRMNT_SHR_ONA_CRDTR [ keep SHR_ONA_CRDTR ] as ANAMART_INSTRMNT_SHR_ONA_CRDTR_AS , FNNCL [ keep ARRRS , ACCRD_INTRST , OFF_BLNC_SHT_AMNT ] as FNNCL_AS , ACCNTNG [ keep PRFRMNG_STTS , ACCMLTD_WRTFFS , ACCMLTD_IMPRMNT , ACCMLTD_CHNGS_FV_CR , CMLTV_RCVRS_SNC_DFLT , CRRYNG_AMNT , PRVSNS_OFF_BLNC_SHT ] as ACCNTNG_AS , INSTRMNT [ keep CMMTMNT_INCPTN , FV_CHNG_CR_BFR_PRCHS ] as INSTRMNT ) ; 

B04.INSTRMNT_FCT_CV_2 := left_join ( B04.INSTRMNT_FCT_CV_1 , B04.INSTRMNT_PRTCTN_TTL_INSTRMNT using OBSRVD_AGNT_ID , DT_RFRNC , CNTRCT_ID , INSTRMNT_ID ) ; 

B04.ANAMART_CV := B04.INSTRMNT_FCT_CV_2 [ calc OTSTNDNG_NMNL_AMNT_CV := OTSTNDNG_NMNL_AMNT_INSTRMNT * SHR_ONA_DBTR_CV * SHR_ONA_CRDTR , OFF_BLNC_SHT_AMNT_CV := OFF_BLNC_SHT_AMNT * SHR_ONA_DBTR_CV * SHR_ONA_CRDTR , CMMTMNT_INCPTN_CV := CMMTMNT_INCPTN * SHR_ONA_DBTR_CV * SHR_ONA_CRDTR , ARRRS_CV := ARRRS * SHR_ONA_DBTR_CV * SHR_ONA_CRDTR , ACCRD_INTRST_CV := ACCRD_INTRST * SHR_ONA_DBTR_CV * SHR_ONA_CRDTR , ACCMLTD_WRTFFS_CV := if OBSRVD_AGNT_ID = CRDTR_ID then ACCMLTD_WRTFFS * SHR_ONA_DBTR_CV else cast ( null , number ) , ACCMLTD_IMPRMNT_CV := if OBSRVD_AGNT_ID = CRDTR_ID then ACCMLTD_IMPRMNT * SHR_ONA_DBTR_CV else cast ( null , number ) , CHNGS_FV_CR_BFR_PRCHS_CV := FV_CHNG_CR_BFR_PRCHS * SHR_ONA_DBTR_CV * SHR_ONA_CRDTR , ACCMLTD_CHNGS_FV_CR_CV := if OBSRVD_AGNT_ID = CRDTR_ID then ACCMLTD_CHNGS_FV_CR * SHR_ONA_DBTR_CV else cast ( null , number ) , CMLTV_RCVRS_SNC_DFLT_CV := if OBSRVD_AGNT_ID = CRDTR_ID then CMLTV_RCVRS_SNC_DFLT * SHR_ONA_DBTR_CV else cast ( null , number ) , CRRYNG_AMNT_CV := if OBSRVD_AGNT_ID = CRDTR_ID then CRRYNG_AMNT * SHR_ONA_DBTR_CV else cast ( null , number ) , PRTCTN_ALLCTD_VL_INST_CV := PRTCTN_ALLCTD_VL * SHR_ONA_DBTR_CV * SHR_ONA_CRDTR , PRVSNS_OFF_BLNC_SHT_CV := if OBSRVD_AGNT_ID = CRDTR_ID then PRVSNS_OFF_BLNC_SHT * SHR_ONA_DBTR_CV else cast ( null , number ) , THRD_PRTY_PRRTY_CLMS_INST_CV := THRD_PRTY_PRRTY_CLMS * SHR_ONA_DBTR_CV * SHR_ONA_CRDTR ] ;

B04.ANAMART_DV := B04.ANAMART_CV [ calc OTSTNDNG_NMNL_AMNT_DV := OTSTNDNG_NMNL_AMNT_INSTRMNT * SHR_ONA_DBTR_DV * SHR_ONA_CRDTR , OFF_BLNC_SHT_AMNT_DV := OFF_BLNC_SHT_AMNT * SHR_ONA_DBTR_DV * SHR_ONA_CRDTR , CMMTMNT_INCPTN_DV := CMMTMNT_INCPTN * SHR_ONA_DBTR_DV * SHR_ONA_CRDTR , ARRRS_DV := ARRRS * SHR_ONA_DBTR_DV * SHR_ONA_CRDTR , ACCRD_INTRST_DV := ACCRD_INTRST * SHR_ONA_DBTR_DV * SHR_ONA_CRDTR , ACCMLTD_WRTFFS_DV := if OBSRVD_AGNT_ID = CRDTR_ID then ACCMLTD_WRTFFS * SHR_ONA_DBTR_DV else cast ( null , number ) , ACCMLTD_IMPRMNT_DV := if OBSRVD_AGNT_ID = CRDTR_ID then ACCMLTD_IMPRMNT * SHR_ONA_DBTR_DV else cast ( null , number ) , CHNGS_FV_CR_BFR_PRCHS_DV := FV_CHNG_CR_BFR_PRCHS * SHR_ONA_DBTR_DV * SHR_ONA_CRDTR , ACCMLTD_CHNGS_FV_CR_DV := if OBSRVD_AGNT_ID = CRDTR_ID then ACCMLTD_CHNGS_FV_CR * SHR_ONA_DBTR_DV else cast ( null , number ) , CMLTV_RCVRS_SNC_DFLT_DV := if OBSRVD_AGNT_ID = CRDTR_ID then CMLTV_RCVRS_SNC_DFLT * SHR_ONA_DBTR_DV else cast ( null , number ) , CRRYNG_AMNT_DV := if OBSRVD_AGNT_ID = CRDTR_ID then CRRYNG_AMNT * SHR_ONA_DBTR_DV else cast ( null , number ) , PRTCTN_ALLCTD_VL_INST_DV := PRTCTN_ALLCTD_VL * SHR_ONA_DBTR_DV * SHR_ONA_CRDTR , PRVSNS_OFF_BLNC_SHT_DV := if OBSRVD_AGNT_ID = CRDTR_ID then PRVSNS_OFF_BLNC_SHT * SHR_ONA_DBTR_DV else cast ( null , number ) , THRD_PRTY_PRRTY_CLMS_INST_DV := THRD_PRTY_PRRTY_CLMS * SHR_ONA_DBTR_DV * SHR_ONA_CRDTR ] ; 

B04.ANAMART_INSTRMNT_CV_DV := B04.ANAMART_DV [ keep THRD_PRTY_PRRTY_CLMS_INST_CV , ACCMLTD_CHNGS_FV_CR_CV , ACCMLTD_IMPRMNT_CV , ACCMLTD_WRTFFS_CV , ACCRD_INTRST_CV , ARRRS_CV , CHNGS_FV_CR_BFR_PRCHS_CV , CMLTV_RCVRS_SNC_DFLT_CV , CMMTMNT_INCPTN_CV , CRRYNG_AMNT_CV , OFF_BLNC_SHT_AMNT_CV , OTSTNDNG_NMNL_AMNT_CV , PRTCTN_ALLCTD_VL_INST_CV , PRVSNS_OFF_BLNC_SHT_CV , THRD_PRTY_PRRTY_CLMS_INST_DV , ACCMLTD_CHNGS_FV_CR_DV , ACCMLTD_IMPRMNT_DV , ACCMLTD_WRTFFS_DV , ACCRD_INTRST_DV , ARRRS_DV , CHNGS_FV_CR_BFR_PRCHS_DV , CMLTV_RCVRS_SNC_DFLT_DV , CMMTMNT_INCPTN_DV , CRRYNG_AMNT_DV , OFF_BLNC_SHT_AMNT_DV , OTSTNDNG_NMNL_AMNT_DV , PRTCTN_ALLCTD_VL_INST_DV , PRVSNS_OFF_BLNC_SHT_DV ] ; 
/*******************************************************************************
*       Module B05
*******************************************************************************/
B05.INSTRMNT_PRTCTN_RCVD_K := INSTRMNT_PRTCTN_RCVD [ keep THRD_PRTY_PRRTY_CLMS ] ; 
B05.INSTRMT_PRTCN_3PSPC_P := min ( B05.INSTRMNT_PRTCTN_RCVD_K group by OBSRVD_AGNT_ID , DT_RFRNC , PRTCTN_ID ) ; 
B05.INSTRMT_PRTCN_3PSPC := B05.INSTRMT_PRTCN_3PSPC_P [ rename THRD_PRTY_PRRTY_CLMS to V_3PSPC ] ; 
B05.INSTRMT_PRTCN_3PTPC_P := max ( B05.INSTRMNT_PRTCTN_RCVD_K group by OBSRVD_AGNT_ID , DT_RFRNC , PRTCTN_ID ) ; 
B05.INSTRMT_PRTCN_3PTPC := B05.INSTRMT_PRTCN_3PTPC_P [ rename THRD_PRTY_PRRTY_CLMS to V_3PTPC ] ; 
B05.INSTRMNT_PRTCTN_3PPC := inner_join ( INSTRMNT_PRTCTN_RCVD , B05.INSTRMT_PRTCN_3PSPC , B05.INSTRMT_PRTCN_3PTPC ) ; 
B05.INSTRMNT_PRTCTN_3PPC_K := B05.INSTRMNT_PRTCTN_3PPC [ keep V_3PSPC , V_3PTPC ] ; 
B05.INSTRMNT_PRTCTN_3PPC_INSTR := sum ( B05.INSTRMNT_PRTCTN_3PPC_K group except PRTCTN_ID ) ; 
B05.ANAMART_INSTRMNT_3PPC := inner_join ( B04.ANAMART_INSTRMNT_CV_DV , B05.INSTRMNT_PRTCTN_3PPC_INSTR , B07.ANAMART_INSTRMNT_X_T_VL ) ; 
/*******************************************************************************
*       Module B06
*******************************************************************************/
B06.LST_CRDTRS := nvl ( ENTTY_INSTRMNT [ filter ENTTY_RL = "1" ] , 1 ) ; 
B06.NMBR_CRDTRS_PR_INSTRMNT_P := count ( B06.LST_CRDTRS group by OBSRVD_AGNT_ID , DT_RFRNC , CNTRCT_ID , INSTRMNT_ID ) ; 
B06.NMBR_CRDTRS_PR_INSTRMNT := B06.NMBR_CRDTRS_PR_INSTRMNT_P [ rename int_var to NMBR_CRDTR ] ; 
B06.LST_ORGNTRS := nvl ( ENTTY_INSTRMNT [ filter ENTTY_RL = "3" ] , 1 ) ; 
B06.NMBR_ORGNTRS_PR_INSTRMNT_P := count ( B06.LST_ORGNTRS group by OBSRVD_AGNT_ID , DT_RFRNC , CNTRCT_ID , INSTRMNT_ID ) ; 
B06.NMBR_ORGNTRS_PR_INSTRMNT := B06.NMBR_ORGNTRS_PR_INSTRMNT_P [ rename int_var to NMBR_ORGNTR ] ; 
B06.LST_SRVCRS := nvl ( ENTTY_INSTRMNT [ filter ENTTY_RL = "7" ] , 1 ) ; 
B06.NMBR_SRVCRS_PR_INSTRMNT_P := count ( B06.LST_SRVCRS group by OBSRVD_AGNT_ID , DT_RFRNC , CNTRCT_ID , INSTRMNT_ID ) ; 
B06.NMBR_SRVCRS_PR_INSTRMNT := B06.NMBR_SRVCRS_PR_INSTRMNT_P [ rename int_var to NMBR_SRVCR ] ; 
B06.NMBR_PRTCTNS_PR_INSTRMNT_P := count ( INSTRMNT_PRTCTN_RCVD group except PRTCTN_ID ) ; 
B06.NMBR_PRTCTNS_PR_INSTRMNT := B06.NMBR_PRTCTNS_PR_INSTRMNT_P [ keep int_var ] [ rename int_var to NMBR_PRTCTN ] ; 
B06.ANAMART_NMBRS_P := left_join ( B06.NMBR_CRDTRS_PR_INSTRMNT , B06.NMBR_ORGNTRS_PR_INSTRMNT , B06.NMBR_SRVCRS_PR_INSTRMNT , B06.NMBR_PRTCTNS_PR_INSTRMNT ) ; 
B06.ANAMART_INSTRMNT_NMBRS := nvl ( B06.ANAMART_NMBRS_P , 0 ) ; 
/*******************************************************************************
*       Module B07
*******************************************************************************/
B07.APAVI_DS := sum ( INSTRMNT_PRTCTN_RCVD group except PRTCTN_ID ) ; 
B07.FNNCL_ZR := FNNCL [ calc OTSTNDNG_NMNL_AMNT := if isnull ( OTSTNDNG_NMNL_AMNT ) then cast ( null , number ) else OTSTNDNG_NMNL_AMNT , OFF_BLNC_SHT_AMNT := if isnull ( OFF_BLNC_SHT_AMNT ) then cast ( null , number ) else OFF_BLNC_SHT_AMNT ] ; 
B07.CTV := B07.FNNCL_ZR [ calc TTL_CMMTMNT_AMNT := OTSTNDNG_NMNL_AMNT + OFF_BLNC_SHT_AMNT ] ; 
B07.XTV_JN := inner_join ( B07.CTV , B03.ANAMART_INSTRMNT_SHR_ONA_CRDTR [ keep SHR_ONA_CRDTR ] as A , B07.APAVI_DS [ rename PRTCTN_ALLCTD_VL to APAVI ] as APAVI_DS_AS ) ; 
B07.ANAMART_INSTRMNT_X_T_VL := B07.XTV_JN [ calc CTV_INSTRMNT := if APAVI = 0.0 then cast ( null , number ) else TTL_CMMTMNT_AMNT / APAVI , LTV_INSTRMNT := if APAVI = 0.0 then cast ( null , number ) else OTSTNDNG_NMNL_AMNT / APAVI , LTV_CRDTR := if APAVI = 0.0 then cast ( null , number ) else OTSTNDNG_NMNL_AMNT * SHR_ONA_CRDTR / APAVI ] [ keep CTV_INSTRMNT , LTV_INSTRMNT , LTV_CRDTR ] ; 
/*******************************************************************************
*       Module B08
*******************************************************************************/
B08.FNNCL_R := FNNCL [ keep DFLT_STTS , DT_DFLT_STTS ] [ rename DFLT_STTS to DFLT_STTS_INSTRMNT , DT_DFLT_STTS to DT_DFLT_STTS_INSTRMNT ] ; 
B08.ENTTY_RSK_R := ENTTY_RSK [ keep DFLT_STTS , DT_DFLT_STTS , PD ] [ rename ENTTY_RIAD_ID to DBTR_ID , DFLT_STTS to DFLT_STTS_DBTR , DT_DFLT_STTS to DT_DFLT_STTS_DBTR , PD to PD_DBTR ] ; 
B08.ANAMART_INSTRMNT_CRDT_QLTY_INSTRMNT := inner_join ( B01.INSTRMNT_FCT_4 [ drop JNT_LBLTY_AMNT ] as A , B08.FNNCL_R ) ; 
B08.ANAMART_INSTRMNT_CRDT_QLTY := inner_join ( B08.ANAMART_INSTRMNT_CRDT_QLTY_INSTRMNT , B08.ENTTY_RSK_R using DT_RFRNC , OBSRVD_AGNT_ID , DBTR_ID ) ; 
/*******************************************************************************
*       Module B09
*******************************************************************************/
B09.ANAMART_INSTRMNT_DYS_P := B01.ANAMART_INSTRMNT_JN [ keep DT_END_INTRST_ONLY , DT_INCPTN , DT_PST_D , DT_LGL_FNL_MTRTY ] ; 
B09.ANAMART_INSTRMNT_DYS := eval ( instDates ( B09.ANAMART_INSTRMNT_DYS_P ) language "sqlite" returns dataset { identifier < string > CNTRCT_ID , identifier < string > CRDTR_ID , identifier < string > DBTR_ID , identifier < date > DT_RFRNC , identifier < string > INSTRMNT_ID , identifier < string > OBSRVD_AGNT_ID , measure < integer > NXT_INTRST_RT_RST_DYS , measure < integer > ORGNL_MTRTY , measure < integer > RSDL_MTRTY , measure < integer > PST_D_DYS } ) ; 
/*******************************************************************************
*       Module B10
*******************************************************************************/
B10.ENTTY_LE := A02.ANAMART_ENTTY_LE [ keep ENTTY_RIAD_CD_LE ] ; 
B10.CNTRPRTY_LE := inner_join ( ENTTY_INSTRMNT , B10.ENTTY_LE [ rename ENTTY_RIAD_CD_LE to LE_CNTRPRTY ] as B ) ; 
B10.OBSRVD_AGNT_LE := inner_join ( B10.CNTRPRTY_LE , B10.ENTTY_LE [ rename ENTTY_RIAD_ID to OBSRVD_AGNT_ID , ENTTY_RIAD_CD_LE to LE_OBSRVD_AGNT ] as B ) ; 

B10.IS_INTRCMPNY_DS_P := B10.OBSRVD_AGNT_LE [ calc IS_SM_LE := LE_CNTRPRTY = LE_OBSRVD_AGNT ] ; 

B10.TTL_CRDTR_DBTR_FLTR := B10.IS_INTRCMPNY_DS_P [ filter ENTTY_RL in { "1" , "2" } ] [ keep IS_SM_LE ] ; 
B10.TTL_CRDTR_DBTR_R := count ( B10.TTL_CRDTR_DBTR_FLTR group except ENTTY_RIAD_ID , ENTTY_RL ) ; 
B10.TTL_CRDTR_DBTR := B10.TTL_CRDTR_DBTR_R [ rename int_var to TTL ] ; 
B10.TTL_INTRCMPNY_FLTR := B10.TTL_CRDTR_DBTR_FLTR [ filter IS_SM_LE = true ] ; 
B10.TTL_INTRCMPNY_R := count ( B10.TTL_CRDTR_DBTR_FLTR group except ENTTY_RIAD_ID , ENTTY_RL ) ; 
B10.TTL_INTRCMPNY := B10.TTL_INTRCMPNY_R [ rename int_var to INTRCMPNY ] ; 
B10.IS_INTRCMPNY_JN := inner_join ( B10.TTL_CRDTR_DBTR , B10.TTL_INTRCMPNY ) ; 

B10.IS_INTRCMPNY_DS := B10.IS_INTRCMPNY_JN [ calc IS_INTRCMPNY := if INTRCMPNY = 0 then "No" else ( if INTRCMPNY = TTL then "Complete" else "Partial" ) ] ; 

B10.IS_SCRD_DS_P := count ( INSTRMNT_PRTCTN_RCVD group except PRTCTN_ID ) ; 
B10.IS_SCRD_DS := B10.IS_SCRD_DS_P [ calc IS_SCRD := "T" ] [ keep IS_SCRD ] ; 

B10.ORGNTR_ID_DS_P := ENTTY_INSTRMNT [ filter ENTTY_RL = "3" ] [ calc measure ORGNTR_ID := ENTTY_RIAD_ID ] ; 
B10.ORGNTR_ID_DS := min ( B10.ORGNTR_ID_DS_P group except ENTTY_RIAD_ID , ENTTY_RL ) ; 


B10.DBTRS := ENTTY_INSTRMNT [ filter ENTTY_RL = "2" ] ; 
B10.NMBR_DBTRS_DS := count ( B10.DBTRS group except ENTTY_RIAD_ID , ENTTY_RL ) ; 
B10.SNGL_LBLTS := B10.NMBR_DBTRS_DS [ filter int_var = 1 ] [ drop int_var ] [ calc TYP_JNT_LBLTY := "1" ] ; 

B10.MLTPL_DBTRS_DS_P := B10.NMBR_DBTRS_DS [ filter int_var > 1 ] ; 
B10.SUM_JNT_LBLTY_DS := sum ( ENTTY_INSTRMNT group except ENTTY_RIAD_ID , ENTTY_RL ) ; 
B10.PRP_LBLTY_P := inner_join ( B10.SUM_JNT_LBLTY_DS , FNNCL [ keep OTSTNDNG_NMNL_AMNT ] as A , B10.MLTPL_DBTRS_DS_P [ drop int_var ] as B ) ; 
B10.PRP_LBLTY := B10.PRP_LBLTY_P [ filter OTSTNDNG_NMNL_AMNT = JNT_LBLTY_AMNT ] [ drop OTSTNDNG_NMNL_AMNT , JNT_LBLTY_AMNT ] [ calc TYP_JNT_LBLTY := "2" ] ; 

B10.PRP_LBLTY_JNT_OR_PR := B10.PRP_LBLTY_P [ filter OTSTNDNG_NMNL_AMNT <> JNT_LBLTY_AMNT ] ; 
B10.PRP_LBLTY_JNT_OR_PR_INDVL := inner_join ( B10.DBTRS , B10.PRP_LBLTY_JNT_OR_PR [ drop JNT_LBLTY_AMNT ] as A ) ; 
B10.TTL_DBTRS_DS_P := count ( B10.PRP_LBLTY_JNT_OR_PR_INDVL group by OBSRVD_AGNT_ID , DT_RFRNC , CNTRCT_ID , INSTRMNT_ID ) ; 
B10.TTL_DBTRS_DS := B10.TTL_DBTRS_DS_P [ rename int_var to TTL_DBTR ] ; 
B10.DBTRS_FLL_FLTRD := B10.PRP_LBLTY_JNT_OR_PR_INDVL [ filter OTSTNDNG_NMNL_AMNT = JNT_LBLTY_AMNT ] ; 
B10.FLL_DBTRS_DS_C := count ( B10.DBTRS_FLL_FLTRD group by OBSRVD_AGNT_ID , DT_RFRNC , CNTRCT_ID , INSTRMNT_ID ) ; 
B10.FLL_DBTRS_DS := B10.FLL_DBTRS_DS_C [ rename int_var to FLL_DBTR ] ; 
B10.PRP_LBLTY_JN := inner_join ( B10.TTL_DBTRS_DS , B10.FLL_DBTRS_DS as B ) ; 
B10.PRP_LBLT_RST := B10.PRP_LBLTY_JN [ calc TYP_JNT_LBLTY := if TTL_DBTR = FLL_DBTR then "4" else "3" ] [ drop TTL_DBTR , FLL_DBTR ] ; 

B10.TYP_JNT_LBLTY_DS := union ( B10.SNGL_LBLTS , B10.PRP_LBLTY , B10.PRP_LBLT_RST ) ; 
B10.ANAMART_INSTRMNT_OTHR := inner_join ( B10.IS_INTRCMPNY_DS [ drop INTRCMPNY , TTL ] as A , B10.IS_SCRD_DS , B10.ORGNTR_ID_DS [ drop JNT_LBLTY_AMNT ] as C , B10.TYP_JNT_LBLTY_DS ) ; 
/*******************************************************************************
*       Module B11
*******************************************************************************/
B11.ANAMART_INSTRMNT_JN2 := inner_join ( B01.ANAMART_INSTRMNT_JN , B02.ANAMART_INSTRMNT_SHR_ONA_DBTR , B03.ANAMART_INSTRMNT_SHR_ONA_CRDTR , B05.ANAMART_INSTRMNT_3PPC [ drop V_3PSPC , V_3PTPC ] as A , B06.ANAMART_INSTRMNT_NMBRS , B08.ANAMART_INSTRMNT_CRDT_QLTY , B09.ANAMART_INSTRMNT_DYS , B10.ANAMART_INSTRMNT_OTHR ) ; 
/*******************************************************************************
*       Module B12
*******************************************************************************/
B12.ANAMART_INSTRMNT_INTRVL := B11.ANAMART_INSTRMNT_JN2 [ calc OTSTNDNG_NMNL_AMNT_INTRVL_CV := if OTSTNDNG_NMNL_AMNT_CV <= 250000 then "2" else ( if OTSTNDNG_NMNL_AMNT_CV <= 1000000 then "3" else "1" ) , OTSTNDNG_NMNL_AMNT_INTRVL_DV := if OTSTNDNG_NMNL_AMNT_CV <= 250000 then "2" else ( if OTSTNDNG_NMNL_AMNT_CV <= 1000000 then "3" else "1" ) , NXT_INTRST_RT_RST_INTRVL := if NXT_INTRST_RT_RST_DYS <= 30 then "72" else ( if NXT_INTRST_RT_RST_DYS <= 90 then "9" else ( if NXT_INTRST_RT_RST_DYS <= 180 then "12" else ( if NXT_INTRST_RT_RST_DYS <= 360 then "16" else ( if NXT_INTRST_RT_RST_DYS <= 720 then "21" else ( if NXT_INTRST_RT_RST_DYS <= 1800 then "29" else ( if NXT_INTRST_RT_RST_DYS <= 3600 then "36" else "71" ) ) ) ) ) ) , ORGNL_MTRTY_INTRVL := if ORGNL_MTRTY <= 30 then "72" else ( if ORGNL_MTRTY <= 90 then "9" else ( if ORGNL_MTRTY <= 180 then "12" else ( if ORGNL_MTRTY <= 360 then "16" else ( if ORGNL_MTRTY <= 720 then "21" else ( if ORGNL_MTRTY <= 1800 then "29" else ( if ORGNL_MTRTY <= 3600 then "36" else "71" ) ) ) ) ) ) , RSDL_MTRTY_INTRVL := if RSDL_MTRTY <= 30 then "72" else ( if RSDL_MTRTY <= 90 then "9" else ( if RSDL_MTRTY <= 180 then "12" else ( if RSDL_MTRTY <= 360 then "16" else ( if RSDL_MTRTY <= 720 then "21" else ( if RSDL_MTRTY <= 1800 then "29" else ( if RSDL_MTRTY <= 3600 then "36" else "71" ) ) ) ) ) ) ] ; 
/*******************************************************************************
*       Module B13
*******************************************************************************/

B13.ANAMART_INSTRMNT_SMPL_WGHT := B12.ANAMART_INSTRMNT_INTRVL [ calc ANNLSD_AGRD_RT_W_ONA_CV := ANNLSD_AGRD_RT * OTSTNDNG_NMNL_AMNT_CV , CTV_INSTRMNT_W_ONA_CV := CTV_INSTRMNT * OTSTNDNG_NMNL_AMNT_CV , CV_SHR_ONA_DBTR_W_ONA_CV := SHR_ONA_DBTR_CV * OTSTNDNG_NMNL_AMNT_CV , SHR_ONA_DBTR_DV_W_ONA_CV := SHR_ONA_DBTR_DV * OTSTNDNG_NMNL_AMNT_CV , INTRST_RT_CP_W_ONA_CV := INTRST_RT_CP * OTSTNDNG_NMNL_AMNT_CV , INTRST_RT_FLR_W_ONA_CV := INTRST_RT_FLR * OTSTNDNG_NMNL_AMNT_CV , INTRST_RT_SPRD_W_ONA_CV := INTRST_RT_SPRD * OTSTNDNG_NMNL_AMNT_CV , LTV_CRDTR_W_ONA_CV := LTV_CRDTR * OTSTNDNG_NMNL_AMNT_CV , LTV_INSTRMNT_W_ONA_CV := LTV_INSTRMNT * OTSTNDNG_NMNL_AMNT_CV , NMBR_CRDTR_W_ONA_CV := NMBR_CRDTR * OTSTNDNG_NMNL_AMNT_CV , NMBR_DBTR_W_ONA_CV := NMBR_DBTR * OTSTNDNG_NMNL_AMNT_CV , NMBR_ORGNTR_W_ONA_CV := NMBR_ORGNTR * OTSTNDNG_NMNL_AMNT_CV , NMBR_PRTCTN_W_ONA_CV := NMBR_PRTCTN * OTSTNDNG_NMNL_AMNT_CV , NMBR_SRVCR_W_ONA_CV := NMBR_SRVCR * OTSTNDNG_NMNL_AMNT_CV , NXT_INTRST_RT_RST_DYS_W_ONA_CV := NXT_INTRST_RT_RST_DYS * OTSTNDNG_NMNL_AMNT_CV , ORGNL_MTRTY_W_ONA_CV := ORGNL_MTRTY * OTSTNDNG_NMNL_AMNT_CV , PD_DBTR_W_ONA_CV := PD_DBTR * OTSTNDNG_NMNL_AMNT_CV , PST_D_DYS_W_ONA_CV := PST_D_DYS * OTSTNDNG_NMNL_AMNT_CV , RSDL_MTRTY_W_ONA_CV := RSDL_MTRTY * OTSTNDNG_NMNL_AMNT_CV , SHR_ONA_CRDTR_W_ONA_CV := SHR_ONA_CRDTR * OTSTNDNG_NMNL_AMNT_CV ] ; 
/*******************************************************************************
*       Module B14
*******************************************************************************/
B14.AGG_INCRMNTL := sum ( C09.ANAMART_PRTCTN_OTHER group except PRTCTN_ID ) ; 
B14.WGHTS_PREP_P := inner_join ( B14.AGG_INCRMNTL , B05.INSTRMNT_PRTCTN_3PPC keep INCRMNTL_3PPC , V_3PSPC , V_3PTPC , PRTCTN_ALLCTD_VL ) ; 
B14.WGHTS_PREP := B14.WGHTS_PREP_P [ calc V_3PSPC_W_3PTPC := V_3PSPC * INCRMNTL_3PPC , V_3PSPC_W_PAV := V_3PSPC * PRTCTN_ALLCTD_VL , V_3PTPC_W_3PTPC := V_3PTPC * INCRMNTL_3PPC , V_3PTPC_W_PAV := V_3PTPC * PRTCTN_ALLCTD_VL ] [ drop V_3PSPC , V_3PTPC , PRTCTN_ALLCTD_VL , INCRMNTL_3PPC ] ; 
B14.WGHTS_AGGR := sum ( B14.WGHTS_PREP group by OBSRVD_AGNT_ID , DT_RFRNC , CNTRCT_ID , INSTRMNT_ID ) ; 
B14.PRTCN_VL_ALLCTN_AGG := sum ( C04.ANAMART_PRTCTN_PV_ALLCTN group except PRTCTN_ID ) ; 
B14.WGHTS_JN := inner_join ( B11.ANAMART_INSTRMNT_JN2 [ keep OTSTNDNG_NMNL_AMNT_DV , OTSTNDNG_NMNL_AMNT_CV , SHR_ONA_CRDTR ] as A , B14.WGHTS_AGGR , B14.PRTCN_VL_ALLCTN_AGG ) ; 
B14.ANAMART_INSTRMNT_CMPLX_WGHT := B14.WGHTS_JN [ calc vv3PSPC_I3PPC_INST_DV := OTSTNDNG_NMNL_AMNT_DV * SHR_ONA_CRDTR * V_3PSPC_W_3PTPC , vv3PSPC_PAV_INST_DV := OTSTNDNG_NMNL_AMNT_DV * SHR_ONA_CRDTR * V_3PSPC_W_PAV , vv3PTPC_I3PPC_INST_DV := OTSTNDNG_NMNL_AMNT_DV * SHR_ONA_CRDTR * V_3PTPC_W_3PTPC , vv3PTPC_PAV_INST_DV := OTSTNDNG_NMNL_AMNT_DV * SHR_ONA_CRDTR * V_3PTPC_W_PAV , vv3PSPC_I3PPC_INST_CV := OTSTNDNG_NMNL_AMNT_CV * SHR_ONA_CRDTR * V_3PSPC_W_3PTPC , vv3PSPC_PAV_INST_CV := OTSTNDNG_NMNL_AMNT_CV * SHR_ONA_CRDTR * V_3PSPC_W_PAV , vv3PTPC_I3PPC_INST_CV := OTSTNDNG_NMNL_AMNT_CV * SHR_ONA_CRDTR * V_3PTPC_W_3PTPC , vv3PTPC_PAV_INST_CV := OTSTNDNG_NMNL_AMNT_CV * SHR_ONA_CRDTR * V_3PTPC_W_PAV , ORGNL_PRTCTN_VL_I3PPC_INST_DV := OTSTNDNG_NMNL_AMNT_DV * SHR_ONA_CRDTR * ORGNL_PRTCTN_VL_I3PPC , ORGNL_PRTCTN_VL_PAV_INST_DV := OTSTNDNG_NMNL_AMNT_DV * SHR_ONA_CRDTR * ORGNL_PRTCTN_VL_PAV , PRTCTN_VL_I3PPC_INST_DV := OTSTNDNG_NMNL_AMNT_DV * SHR_ONA_CRDTR * PRTCTN_VL_I3PPC , PRTCTN_VL_PAV_INST_DV := OTSTNDNG_NMNL_AMNT_DV * SHR_ONA_CRDTR * PRTCTN_VL_PAV , ORGNL_PRTCTN_VL_I3PPC_INST_CV := OTSTNDNG_NMNL_AMNT_CV * SHR_ONA_CRDTR * ORGNL_PRTCTN_VL_I3PPC , ORGNL_PRTCTN_VL_PAV_INST_CV := OTSTNDNG_NMNL_AMNT_CV * SHR_ONA_CRDTR * ORGNL_PRTCTN_VL_PAV , PRTCTN_VL_I3PPC_INST_CV := OTSTNDNG_NMNL_AMNT_CV * SHR_ONA_CRDTR * PRTCTN_VL_I3PPC , PRTCTN_VL_PAV_INST_CV := OTSTNDNG_NMNL_AMNT_CV * SHR_ONA_CRDTR * PRTCTN_VL_PAV ] [ keep vv3PSPC_I3PPC_INST_DV , vv3PSPC_PAV_INST_DV , vv3PTPC_I3PPC_INST_DV , vv3PTPC_PAV_INST_DV , vv3PSPC_I3PPC_INST_CV , vv3PSPC_PAV_INST_CV , vv3PTPC_I3PPC_INST_CV , vv3PTPC_PAV_INST_CV , ORGNL_PRTCTN_VL_I3PPC_INST_DV , ORGNL_PRTCTN_VL_PAV_INST_DV , PRTCTN_VL_I3PPC_INST_DV , PRTCTN_VL_PAV_INST_DV , ORGNL_PRTCTN_VL_I3PPC_INST_CV , ORGNL_PRTCTN_VL_PAV_INST_CV , PRTCTN_VL_I3PPC_INST_CV , PRTCTN_VL_PAV_INST_CV ] ; 
/*******************************************************************************
*       Module B15
*******************************************************************************/
ANCRDT_INSTRMNT_FCT <- inner_join ( B13.ANAMART_INSTRMNT_SMPL_WGHT , B14.ANAMART_INSTRMNT_CMPLX_WGHT ) ; 
/*******************************************************************************
*       Module C01
*******************************************************************************/
C01.ANAMART_PRTCTN_JN := eval ( prtctnFctJn ( INSTRMNT_PRTCTN_RCVD , PRTCTN_RCVD ) language "sqlite" returns dataset { identifier < string > OBSRVD_AGNT_ID , identifier < string > CNTRCT_ID , identifier < date > DT_RFRNC , identifier < string > PRTCTN_ID , identifier < string > PRTCTN_PRVDR_ID , identifier < string > INSTRMNT_ID , identifier < string > PRTCTN_PRVDR_ID , measure < number > PRTCTN_ALLCTD_VL , identifier < string > THRD_PRTY_PRRTY_CLMS } ) ; 
/*******************************************************************************
*       Module C02
*******************************************************************************/
C02.INSTRMNT_INFO := min ( ANCRDT_INSTRMNT_FCT group except CRDTR_ID , DBTR_ID ) ; 
C02.ANAMART_PRTCTN_INSTRMNT_KP := C02.INSTRMNT_INFO [ keep ACCNTNG_CLSSFCTN , ANNLSD_AGRD_RT , CRRNCY_DNMNTN , CTV_INSTRMNT , DFLT_STTS_INSTRMNT , DT_DFLT_STTS_INSTRMNT , DT_END_INTRST_ONLY , DT_FRBRNC_STTS , DT_INCPTN , DT_LGL_FNL_MTRTY , DT_NXT_INTRST_RT_RST , DT_PRFRMNG_STTS , DT_PST_D , DT_STTLMNT , FDCRY , FRBRNC_STTS , IMPRMNT_ASSSSMNT_MTHD , IMPRMNT_STTS , INTRST_RT_CP , INTRST_RT_FLR , INTRST_RT_RST_FRQNCY , INTRST_RT_SPRD , IS_INTRCMPNY , IS_SCRD , LTV_INSTRMNT , NMBR_CRDTR , NMBR_DBTR , NMBR_ORGNTR , NMBR_PRTCTN , NMBR_SRVCR , NXT_INTRST_RT_RST_DYS , NXT_INTRST_RT_RST_INTRVL , ORGNL_MTRTY , ORGNL_MTRTY_INTRVL , ORGNTR_ID , PRDNTL_PRTFL , PRFRMNG_STTS , PRJCT_FNNC_LN , PRPS , PST_D_DYS , PYMNT_FRQNCY , RCGNTN_STTS , RCRS , RFRNC_RT , RPYMNT_RGHTS , RSDL_MTRTY , RSDL_MTRTY_INTRVL , SBRDNTD_DBT , SRC_ENCMBRNC , SRVCR_ID , SYNDCTD_CNTRCT_ID , TRNSFRRD_AMNT_INSTRMNT , TYP_AMRTSTN , TYP_INSTRMNT , TYP_INTRST_RT , TYP_JNT_LBLTY , TYP_SCRTSTN ] ; 
C02.ANAMART_PRTCTN_INSTRMNT := inner_join ( C01.ANAMART_PRTCTN_JN , C02.ANAMART_PRTCTN_INSTRMNT_KP ) ; 
/*******************************************************************************
*       Module C03
*******************************************************************************/
C03.INSTRMNT_FCT_AGGR_KP := ANCRDT_INSTRMNT_FCT [ keep ACCMLTD_CHNGS_FV_CR_DV , ACCMLTD_IMPRMNT_DV , ACCMLTD_WRTFFS_DV , ACCRD_INTRST_DV , vv3PSPC_I3PPC_INST_DV , vv3PSPC_PAV_INST_DV , vv3PTPC_I3PPC_INST_DV , vv3PTPC_PAV_INST_DV , ORGNL_PRTCTN_VL_I3PPC_INST_DV , ORGNL_PRTCTN_VL_PAV_INST_DV , PRTCTN_VL_I3PPC_INST_DV , PRTCTN_VL_PAV_INST_DV , ARRRS_DV , ANNLSD_AGRD_RT_W_ONA_CV , CMLTV_RCVRS_SNC_DFLT_DV , CMMTMNT_INCPTN_DV , CRRYNG_AMNT_DV , OTSTNDNG_NMNL_AMNT_DV , OFF_BLNC_SHT_AMNT_DV , PRTCTN_ALLCTD_VL_INST_DV , PRVSNS_OFF_BLNC_SHT_DV ] ; 
C03.INSTRMNT_FCT_AGGR_P := sum ( C03.INSTRMNT_FCT_AGGR_KP group except CRDTR_ID , DBTR_ID ) ; 
C03.INSTRMNT_FCT_AGGR := C03.INSTRMNT_FCT_AGGR_P [ rename ACCMLTD_CHNGS_FV_CR_DV to ACCMLTD_CHNGS_FV_CR_INSTRMNT , ACCMLTD_IMPRMNT_DV to ACCMLTD_IMPRMNT_INSTRMNT , ACCMLTD_WRTFFS_DV to ACCMLTD_WRTFFS_INSTRMNT , ACCRD_INTRST_DV to ACCRD_INTRST_INSTRMNT , vv3PSPC_I3PPC_INST_DV to vv3PSPC_I3PPC , vv3PSPC_PAV_INST_DV to vv3PSPC_PAV , vv3PTPC_I3PPC_INST_DV to vv3PTPC_I3PPC , vv3PTPC_PAV_INST_DV to vv3PTPC_PAV , ORGNL_PRTCTN_VL_I3PPC_INST_DV to ORGNL_PRTCTN_VL_I3PPC_INST , ORGNL_PRTCTN_VL_PAV_INST_DV to ORGNL_PRTCTN_VL_PAV_INST , PRTCTN_VL_I3PPC_INST_DV to PRTCTN_VL_I3PPC_INST , PRTCTN_VL_PAV_INST_DV to PRTCTN_VL_PAV_INST , ARRRS_DV to ARRRS_INSTRMNT , ANNLSD_AGRD_RT_W_ONA_CV to ANNLSD_AGRD_RT_W_AONA , CMLTV_RCVRS_SNC_DFLT_DV to CMLTV_RCVRS_SNC_DFLT_INSTRMNT , CMMTMNT_INCPTN_DV to CMMTMNT_INCPTN_INSTRMNT , CRRYNG_AMNT_DV to CRRYNG_AMNT_INSTRMNT , OTSTNDNG_NMNL_AMNT_DV to OTSTNDNG_NMNL_AMNT_INSTRMNT , OFF_BLNC_SHT_AMNT_DV to OFF_BLNC_SHT_AMNT_INSTRMNT , PRTCTN_ALLCTD_VL_INST_DV to PRTCTN_ALLCTD_VL_INSTRMNT , PRVSNS_OFF_BLNC_SHT_DV to PRVSNS_OFF_BLNC_SHT_INSTRMNT ] ; 
C03.PRTCTN_FCT_AGGR_FV := INSTRMNT [ keep FV_CHNG_CR_BFR_PRCHS ] [ rename FV_CHNG_CR_BFR_PRCHS to FV_CHNG_CR_BFR_PRCHS_INSTRMNT ] ; 
C03.ANAMART_PRTCTN_AGGR := inner_join ( C02.ANAMART_PRTCTN_INSTRMNT , C03.INSTRMNT_FCT_AGGR , C03.PRTCTN_FCT_AGGR_FV ) ; 
/*******************************************************************************
*       Module C04
*******************************************************************************/
C04.INSTRMTN_PRTCT_RCVD_AGG := sum ( INSTRMNT_PRTCTN_RCVD group except CNTRCT_ID , INSTRMNT_ID ) ; 
C04.RTS_DNMNTR := C04.INSTRMTN_PRTCT_RCVD_AGG [ calc DNMNTR := THRD_PRTY_PRRTY_CLMS + PRTCTN_ALLCTD_VL ] [ drop THRD_PRTY_PRRTY_CLMS , PRTCTN_ALLCTD_VL ] ; 
C04.PRTCTN_RCVD_KP := PRTCTN_RCVD [ keep PRTCTN_VL_TTL_PRTCTN , ORGNL_PRTCTN_VL_PRTCTN ] ; 
C04.PRTCTN_RCVD_AGG := sum ( C04.PRTCTN_RCVD_KP group except PRTCTN_PRVDR_ID ) ; 
C04.INSTRMNT_PRTCTN_ALLCTN_DS := inner_join ( INSTRMNT_PRTCTN_RCVD , C04.RTS_DNMNTR , C04.PRTCTN_RCVD_AGG ) ; 
C04.ANAMART_PRTCTN_PV_ALLCTN := C04.INSTRMNT_PRTCTN_ALLCTN_DS [ calc ORGNL_PRTCTN_VL_I3PPC := ORGNL_PRTCTN_VL_PRTCTN * THRD_PRTY_PRRTY_CLMS / DNMNTR , PRTCTN_VL_I3PPC := PRTCTN_VL_TTL_PRTCTN * THRD_PRTY_PRRTY_CLMS / DNMNTR , ORGNL_PRTCTN_VL_PAV := ORGNL_PRTCTN_VL_PRTCTN * PRTCTN_ALLCTD_VL / DNMNTR , PRTCTN_VL_PAV := PRTCTN_VL_TTL_PRTCTN * PRTCTN_ALLCTD_VL / DNMNTR ] [ keep ORGNL_PRTCTN_VL_I3PPC , PRTCTN_VL_I3PPC , ORGNL_PRTCTN_VL_PAV , PRTCTN_VL_PAV ] ; 
/*******************************************************************************
*       Module C05
*******************************************************************************/
C05.THRD_PRTY_TTL_CLM_DS := sum ( INSTRMNT_PRTCTN_RCVD group except CNTRCT_ID , INSTRMNT_ID ) ; 
C05.ALLCTBL_PRTCN_VL_P := inner_join ( C05.THRD_PRTY_TTL_CLM_DS , PRTCTN_RCVD keep PRTCTN_VL_TTL_PRTCTN , THRD_PRTY_PRRTY_CLMS , PRTCTN_ALLCTD_VL ) ; 
C05.ALLCTBL_PRTCN_VL_DS := C05.ALLCTBL_PRTCN_VL_P [ calc ALLCTBL_PRTCTN_VL := PRTCTN_VL_TTL_PRTCTN - THRD_PRTY_PRRTY_CLMS ] ; 
C05.ANAMART_PRTCTN_ALLCTBL_KP := C05.ALLCTBL_PRTCN_VL_DS [ calc ALLCTBL_PRTCTN_VL_USD := if ALLCTBL_PRTCTN_VL = 0 then 0 else PRTCTN_ALLCTD_VL / ALLCTBL_PRTCTN_VL ] [ keep ALLCTBL_PRTCTN_VL , ALLCTBL_PRTCTN_VL_USD ] ; 
C05.ANAMART_PRTCTN_ALLCTBL := inner_join ( C03.ANAMART_PRTCTN_AGGR , C05.ANAMART_PRTCTN_ALLCTBL_KP ) ;
/*******************************************************************************
*       Module C06
*******************************************************************************/
C06.ENTTY_RSK_R := ENTTY_RSK [ keep DFLT_STTS , DT_DFLT_STTS , PD ] [ rename ENTTY_RIAD_ID to PRTCTN_PRVDR_ID , DFLT_STTS to DFLT_STTS_PRTCTN_PRVDR , DT_DFLT_STTS to DT_DFLT_STTS_PRTCTN_PRVDR , PD to PD_PRTCTN_PRVDR ] ; 
C06.ANAMART_PRTCTN_CRDT_QLTY := left_join ( C05.ANAMART_PRTCTN_ALLCTBL , C06.ENTTY_RSK_R using DT_RFRNC , OBSRVD_AGNT_ID , PRTCTN_PRVDR_ID ) ; 
/*******************************************************************************
*       Module C07
*******************************************************************************/

C07.PRTCTN_RCVD_S := min ( PRTCTN_RCVD group except PRTCTN_PRVDR_ID ) ; 
C07.MTRSTS_DS := inner_join ( INSTRMNT [ keep DT_LGL_FNL_MTRTY ] as A , C07.PRTCTN_RCVD_S [ keep DT_MTRTY_PRTCTN ] as B , INSTRMNT_PRTCTN_RCVD ) ; 
C07.MSMTCH_BL_DS := C07.MTRSTS_DS [ calc IS_PRTCTN_MTRTY_MSMTCH := if DT_LGL_FNL_MTRTY > DT_MTRTY_PRTCTN then "T" else "F" ] ; 
C07.ANAMART_PRTCTN_MSMTCH := eval ( prtctnDts ( C07.MSMTCH_BL_DS ) language "sqlite" returns dataset { identifier < string > CNTRCT_ID , identifier < date > DT_RFRNC , identifier < string > OBSRVD_AGNT_ID , identifier < string > INSTRMNT_ID , identifier < string > PRTCTN_ID , measure < string > IS_PRTCTN_MTRTY_MSMTCH , measure < number > MTRTY_MSMTCH , measure < number > PRTCTN_RSDL_MTRTY_DYS } ) ; 
/*******************************************************************************
*       Module C08
*******************************************************************************/
C08.PAV_AGG_PRTCN_P := sum ( INSTRMNT_PRTCTN_RCVD group except CNTRCT_ID , INSTRMNT_ID ) ; 
C08.PAV_AGG_PRTCN := C08.PAV_AGG_PRTCN_P [ keep PRTCTN_ALLCTD_VL ] [ rename PRTCTN_ALLCTD_VL to PAV_PRTCTN ] ; 
C08.PAV_AGG_INSTRMNT_P := sum ( INSTRMNT_PRTCTN_RCVD group except PRTCTN_ID ) ; 
C08.PAV_AGG_INSTRMNT := C08.PAV_AGG_INSTRMNT_P [ keep PRTCTN_ALLCTD_VL ] [ rename PRTCTN_ALLCTD_VL to PAV_INSTMRNT ] ; 
C08.SHR_PV_JN_P := inner_join ( INSTRMNT_PRTCTN_RCVD , C08.PAV_AGG_PRTCN ) ; 
C08.SHR_PV_JN := inner_join ( C08.SHR_PV_JN_P , C08.PAV_AGG_INSTRMNT using DT_RFRNC , OBSRVD_AGNT_ID , INSTRMNT_ID , CNTRCT_ID ) ; 
C08.SHR_PV_DS := C08.SHR_PV_JN [ calc SHR_PAV_PRTCTN := if PAV_PRTCTN = 0 then 0 else PRTCTN_ALLCTD_VL / PAV_PRTCTN , SHR_PAV_INSTRMNT := if PAV_INSTMRNT = 0 then 0 else PRTCTN_ALLCTD_VL / PAV_INSTMRNT , OTHR_INSTRMNT_PAV_PRTCTN := PAV_PRTCTN - PRTCTN_ALLCTD_VL ] ; 
C08.SHR_ONA_CRDTR_MIN := min ( B03.ANAMART_INSTRMNT_SHR_ONA_CRDTR group except DBTR_ID ) ; 
C08.SHR_ONA_CRDTR_AGG := sum ( C08.SHR_ONA_CRDTR_MIN group except CRDTR_ID ) ; 
C08.SHR_PV_DS_DRP := min ( C08.SHR_PV_DS group except PRTCTN_ID ) ; 
C08.ONA_JN := inner_join ( C08.SHR_PV_DS_DRP , C08.SHR_ONA_CRDTR_AGG [ keep SHR_ONA_CRDTR ] as B , FNNCL ) ; 
C08.ONA_DS := C08.ONA_JN [ calc OTSTNDNG_NMNL_AMNT := OTSTNDNG_NMNL_AMNT * SHR_PAV_INSTRMNT * SHR_ONA_CRDTR ] ; 
C08.ANAMART_PRTCTN_ALLCTN := inner_join ( C08.SHR_PV_DS [ keep SHR_PAV_PRTCTN , SHR_PAV_INSTRMNT , OTHR_INSTRMNT_PAV_PRTCTN ] as A , C08.ONA_DS [ keep OTSTNDNG_NMNL_AMNT ] as B ) ; 
/*******************************************************************************
*       Module C09
*******************************************************************************/
C09.NMBR_INSTRMNT_SCRD_DS_P := count ( INSTRMNT_PRTCTN_RCVD group except CNTRCT_ID , INSTRMNT_ID ) ; 
C09.NMBR_INSTRMNT_SCRD_DS := C09.NMBR_INSTRMNT_SCRD_DS_P [ keep int_var ] [ rename int_var to NMBR_INSTRMNT_SCRD ] ; 
C09.MX_3PPC_DS := max ( INSTRMNT_PRTCTN_RCVD group except CNTRCT_ID , INSTRMNT_ID ) ; 
C09.INCRMNTL_3PPC_JN := inner_join ( C09.MX_3PPC_DS [ keep THRD_PRTY_PRRTY_CLMS ] [ rename THRD_PRTY_PRRTY_CLMS to THRD_PRTY_PRRTY_CLMS_MX ] as A , INSTRMNT_PRTCTN_RCVD , C09.NMBR_INSTRMNT_SCRD_DS ) ; 
C09.INCRMNTL_3PPC_DS := C09.INCRMNTL_3PPC_JN [ calc INCRMNTL_3PPC := THRD_PRTY_PRRTY_CLMS - THRD_PRTY_PRRTY_CLMS_MX / NMBR_INSTRMNT_SCRD ] ; 
C09.ANAMART_PRTCTN_OTHER := C09.INCRMNTL_3PPC_DS [ keep NMBR_INSTRMNT_SCRD , INCRMNTL_3PPC ] ; 
/*******************************************************************************
*       Module C10
*******************************************************************************/
C10.ANAMART_PRTCTN_JN2 := inner_join ( C04.ANAMART_PRTCTN_PV_ALLCTN , C06.ANAMART_PRTCTN_CRDT_QLTY , C07.ANAMART_PRTCTN_MSMTCH , C08.ANAMART_PRTCTN_ALLCTN , C09.ANAMART_PRTCTN_OTHER ) ; 
/*******************************************************************************
*       Module C11
*******************************************************************************/
C11.SMPL_WGHT_DS_INSTRMNT_KP := ANCRDT_INSTRMNT_FCT [ keep CTV_INSTRMNT , INTRST_RT_CP , INTRST_RT_FLR , INTRST_RT_SPRD , LTV_INSTRMNT , NMBR_CRDTR , NMBR_DBTR , NMBR_ORGNTR , NMBR_SRVCR , NXT_INTRST_RT_RST_DYS , ORGNL_MTRTY , PST_D_DYS , RSDL_MTRTY ] ; 
C11.SMPL_WGHT_DS_INSTRMNT := min ( C11.SMPL_WGHT_DS_INSTRMNT_KP group except CRDTR_ID , DBTR_ID ) ; 
C11.SMPL_WGHT_DS_PRTCTN := C10.ANAMART_PRTCTN_JN2 [ keep PD_PRTCTN_PRVDR , NMBR_INSTRMNT_SCRD , SHR_PAV_PRTCTN , SHR_PAV_INSTRMNT , PRTCTN_RSDL_MTRTY_DYS , NMBR_PRTCTN , MTRTY_MSMTCH , OTSTNDNG_NMNL_AMNT , ALLCTBL_PRTCTN_VL_USD ] ; 
C11.ANAMART_PRTCTN_SMPL_WGHT_JN := inner_join ( C11.SMPL_WGHT_DS_INSTRMNT , C11.SMPL_WGHT_DS_PRTCTN ) ; 
C11.ANAMART_PRTCTN_SMPL_WGHT_CLC := C11.ANAMART_PRTCTN_SMPL_WGHT_JN [ calc CTV_INSTRMNT_W_AONA := CTV_INSTRMNT * OTSTNDNG_NMNL_AMNT , INTRST_RT_CP_W_AONA := INTRST_RT_CP * OTSTNDNG_NMNL_AMNT , INTRST_RT_FLR_W_AONA := INTRST_RT_FLR * OTSTNDNG_NMNL_AMNT , INTRST_RT_SPRD_W_AONA := INTRST_RT_SPRD * OTSTNDNG_NMNL_AMNT , LTV_INSTRMNT_W_AONA := LTV_INSTRMNT * OTSTNDNG_NMNL_AMNT , MTRTY_MSMTCH_W_AONA := MTRTY_MSMTCH * OTSTNDNG_NMNL_AMNT , NMBR_CRDTR_W_AONA := NMBR_CRDTR * OTSTNDNG_NMNL_AMNT , NMBR_DBTR_W_AONA := NMBR_DBTR * OTSTNDNG_NMNL_AMNT , NMBR_INSTRMNT_SCRD_W_AONA := NMBR_INSTRMNT_SCRD * OTSTNDNG_NMNL_AMNT , NMBR_ORGNTR_W_AONA := NMBR_ORGNTR * OTSTNDNG_NMNL_AMNT , NMBR_PRTCTN_W_AONA := NMBR_PRTCTN * OTSTNDNG_NMNL_AMNT , NMBR_SRVCR_W_AONA := NMBR_SRVCR * OTSTNDNG_NMNL_AMNT , NXT_INTRST_RT_RST_DYS_W_AONA := NXT_INTRST_RT_RST_DYS * OTSTNDNG_NMNL_AMNT , ORGNL_MTRTY_W_AONA := ORGNL_MTRTY * OTSTNDNG_NMNL_AMNT , PD_PRTCTN_PRVDR_W_AONA := PD_PRTCTN_PRVDR * OTSTNDNG_NMNL_AMNT , PRTCTN_RSDL_MTRTY_DYS_W_AONA := PRTCTN_RSDL_MTRTY_DYS * OTSTNDNG_NMNL_AMNT , PST_D_DYS_W_AONA := PST_D_DYS * OTSTNDNG_NMNL_AMNT , RSDL_MTRTY_W_AONA := RSDL_MTRTY * OTSTNDNG_NMNL_AMNT , SHR_PAV_INSTRMNT_W_AONA := SHR_PAV_INSTRMNT * OTSTNDNG_NMNL_AMNT , SHR_PAV_PRTCTN_W_AONA := SHR_PAV_PRTCTN * OTSTNDNG_NMNL_AMNT , ALLCTBL_PRTCTN_VL_USD_W_AONA := ALLCTBL_PRTCTN_VL_USD * OTSTNDNG_NMNL_AMNT ] [ keep CTV_INSTRMNT_W_AONA , INTRST_RT_CP_W_AONA , INTRST_RT_FLR_W_AONA , INTRST_RT_SPRD_W_AONA , LTV_INSTRMNT_W_AONA , MTRTY_MSMTCH_W_AONA , NMBR_CRDTR_W_AONA , NMBR_DBTR_W_AONA , NMBR_INSTRMNT_SCRD_W_AONA , NMBR_ORGNTR_W_AONA , NMBR_PRTCTN_W_AONA , NMBR_SRVCR_W_AONA , NXT_INTRST_RT_RST_DYS_W_AONA , ORGNL_MTRTY_W_AONA , PD_PRTCTN_PRVDR_W_AONA , PRTCTN_RSDL_MTRTY_DYS_W_AONA , PST_D_DYS_W_AONA , RSDL_MTRTY_W_AONA , SHR_PAV_INSTRMNT_W_AONA , SHR_PAV_PRTCTN_W_AONA , ALLCTBL_PRTCTN_VL_USD_W_AONA ] ; 
C11.ANAMART_PRTCTN_SMPL_WGHT := inner_join ( C10.ANAMART_PRTCTN_JN2 , C11.ANAMART_PRTCTN_SMPL_WGHT_CLC ) ;
/*******************************************************************************
*       Module C12
*******************************************************************************/
C12.ANAMART_PRTCTN_DYS := C11.ANAMART_PRTCTN_SMPL_WGHT [ calc PRTCTN_RSDL_MTRTY := if PRTCTN_RSDL_MTRTY_DYS <= -18000 then "48" else ( if PRTCTN_RSDL_MTRTY_DYS <= -10800 then "49" else ( if PRTCTN_RSDL_MTRTY_DYS <= -7200 then "50" else ( if PRTCTN_RSDL_MTRTY_DYS <= -5400 then "51" else ( if PRTCTN_RSDL_MTRTY_DYS <= -3600 then "52" else ( if PRTCTN_RSDL_MTRTY_DYS <= -1800 then "53" else ( if PRTCTN_RSDL_MTRTY_DYS <= -1080 then "54" else ( if PRTCTN_RSDL_MTRTY_DYS <= -720 then "55" else ( if PRTCTN_RSDL_MTRTY_DYS <= -540 then "56" else ( if PRTCTN_RSDL_MTRTY_DYS <= -360 then "57" else ( if PRTCTN_RSDL_MTRTY_DYS <= -180 then "58" else ( if PRTCTN_RSDL_MTRTY_DYS <= -90 then "59" else ( if PRTCTN_RSDL_MTRTY_DYS <= -30 then "60" else ( if PRTCTN_RSDL_MTRTY_DYS <= -7 then "61" else ( if PRTCTN_RSDL_MTRTY_DYS <= -1 then "62" else ( if PRTCTN_RSDL_MTRTY_DYS <= 0 then "63" else ( if PRTCTN_RSDL_MTRTY_DYS <= 1 then "64" else ( if PRTCTN_RSDL_MTRTY_DYS <= 7 then "3" else ( if PRTCTN_RSDL_MTRTY_DYS <= 30 then "65" else ( if PRTCTN_RSDL_MTRTY_DYS <= 90 then "9" else ( if PRTCTN_RSDL_MTRTY_DYS <= 180 then "12" else ( if PRTCTN_RSDL_MTRTY_DYS <= 360 then "16" else ( if PRTCTN_RSDL_MTRTY_DYS <= 540 then "66" else ( if PRTCTN_RSDL_MTRTY_DYS <= 720 then "67" else ( if PRTCTN_RSDL_MTRTY_DYS <= 1080 then "28" else ( if PRTCTN_RSDL_MTRTY_DYS <= 1800 then "31" else ( if PRTCTN_RSDL_MTRTY_DYS <= 3600 then "36" else ( if PRTCTN_RSDL_MTRTY_DYS <= 5400 then "39" else ( if PRTCTN_RSDL_MTRTY_DYS <= 7200 then "41" else ( if PRTCTN_RSDL_MTRTY_DYS <= 10800 then "68" else ( if PRTCTN_RSDL_MTRTY_DYS <= 18000 then "69" else ( "70" ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ] ; 
ANCRDT_PRTCTN_RCVD_FCT <- C12.ANAMART_PRTCTN_DYS ; 