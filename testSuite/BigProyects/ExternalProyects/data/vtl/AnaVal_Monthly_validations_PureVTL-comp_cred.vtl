CD0020_DS :=
  dsPrep.INSTRMNT_OBSRVD_AGNT
    [filter CNTRY not_in AnaCreditCountries]
    [calc CD0020 := true]
    [keep CD0020];


CD0030_DS :=
  dsPrep.INSTRMNT_OBSRVD_AGNT
    [filter (CNTRY in AnaCreditCountries and HD_QRTR_CNTRY not_in EU_countries) or SSMSIGNIFICANCE = "EXI"]
    [calc CD0030 := true]
    [keep CD0030];


CD0039_P :=
    exists_in(ANCRDT_INSTRMNT_C, ANCRDT_ACCNTNG_C, false);

CD0039_DS:=
    CD0039_P
        [calc CD0039 := not(bool_var)]
        [keep CD0039];



CD0040_DS := 
    dsPrep.CRDTR_SRVCR_PVT
        [filter RCGNTN_STTS = "3" and not CRDTR and SRVCR]
        [calc CD0040 := true]
        [keep CD0040];
        

CD0041_DS := 
    dsPrep.ENTTY_HD_QRTR
        [filter HD_QRTR_CD_CRDTR = HD_QRTR_CD_DBTR or HD_QRTR_CD_CRDTR = DBTR_CD or HD_QRTR_CD_DBTR = CRDTR_CD]
        [calc CD0041 := true]
        [keep CD0041];
        
CD0050_DS := 
    ANCRDT_INSTRMNT_C
        [filter DT_INCPTN < cast("2018-09-01", date)]
        [calc CD0050 := true]
        [keep CD0050];


/*
CD0060 not clear how to do it with future data, or how to know whether a daqtaset is accecpted or not
*/

CRDTR_OBSRVD_AGNT :=
    ANCRDT_ENTTY_INSTRMNT_C
        [sub ENTTY_RL = "1"]
        [filter OBSRVD_AGNT_CD = ENTTY_RIAD_CD];
        
CRDTR_OBSRVD_AGNT_MX :=
    max(CRDTR_OBSRVD_AGNT group except ENTTY_RIAD_CD);
        
CD0060_P := 
    left_join(
        CRDTR_OBSRVD_AGNT_MX,
        ANCRDT_FNNCL_C,
        ANCRDT_ACCNTNG_C_Z
        keep OTSTNDNG_NMNL_AMNT, OFF_BLNC_SHT_AMNT, ACCMLTD_WRTFFS, RCGNTN_STTS);


CD0060_DS := 
    CD0060_P
        [calc CD0060 := if isnull(RCGNTN_STTS) /*This is to check whether there exists information for accounting*/
                            then 
                                if OTSTNDNG_NMNL_AMNT = 0 and isnull(OFF_BLNC_SHT_AMNT)
                                    then true
                                    else null
                            else
                                if OTSTNDNG_NMNL_AMNT = 0 and isnull(OFF_BLNC_SHT_AMNT) and RCGNTN_STTS = "3" and ACCMLTD_WRTFFS > 0
                                    then true
                                    else null]
        [keep CD0060];


/*
CD0170
*/

RIAD_ANCRDT_DRGTN_QRTR_CR_OA_MSR := 
    RIAD_ANCRDT_DRGTN_QRTR_CR_OA_C
        [keep OBS_VALUE]
        [rename OBS_VALUE to ANCRDT_DRGTN_QRTR_CR_OA, ENTTY_RIAD_CD to OBSRVD_AGNT_CD];
        
RIAD_ANCRDT_DRGTN_QRTR_CR_OA_CJ :=
    cross_join(RIAD_ANCRDT_DRGTN_QRTR_CR_OA_MSR, dsPrep.DT_RFRNC_DS);

RIAD_ANCRDT_DRGTN_QRTR_CR_OA_FLTR :=
    RIAD_ANCRDT_DRGTN_QRTR_CR_OA_CJ[filter DT_RFRNC >= VLD_FRM and DT_RFRNC <= VLD_T];
        
RIAD_ANCRDT_DRGTN_QRTR_CR_OA_DS := 
    max(RIAD_ANCRDT_DRGTN_QRTR_CR_OA_FLTR group except VLD_FRM, VLD_T);  


CD0170_DS :=
    RIAD_ANCRDT_DRGTN_QRTR_CR_OA_DS
        [calc CD0170 := if ANCRDT_DRGTN_QRTR_CR_OA = "T" then true else null]
        [keep CD0170];
    

ATTRBTS_FLL_P :=
    left_join(
        ANCRDT_INSTRMNT_C[keep TYP_INSTRMNT][drop TYP_INSTRMNT] as A,
        CD0020_DS,
        CD0030_DS,
        CD0039_DS,
        CD0040_DS,
        CD0041_DS,
        CD0050_DS,
        CD0060_DS
    );
    
ATTRBTS_FLL_CD0170_DS :=
    left_join(
        ATTRBTS_FLL_P,
        CD0170_DS
        using DT_RFRNC, OBSRVD_AGNT_CD
    );

ATTRBTS_FLL :=
    nvl(ATTRBTS_FLL_CD0170_DS, false);


/***************************************************************************************

INSTRMNT_CHCK

****************************************************************************************/

INSTRMNT_CHCK :=
    inner_join(
        ANCRDT_INSTRMNT_C,
        ATTRBTS_FLL
    );
    
INSTRMNT_CMPLTNSS <-
    check_datapoint(INSTRMNT_CHCK, completenessInstrument);


ENTTY_DFLT_INSTRMNT :=
    inner_join(
        ANCRDT_ENTTY_DFLT_C,
        ANCRDT_ENTTY_INSTRMNT_C
    );


ENTTY_DFLT_CHK := 
    inner_join(
        ENTTY_DFLT_INSTRMNT,
        ATTRBTS_FLL[keep CD0060, CD0030, CD0039, CD0040] as B
    );
    

ENTTY_DFLT_CMPLTNSS <-
    check_datapoint(ENTTY_DFLT_CHK, completenessEntityDefault);



FNNCL_CHCK :=
    inner_join(
        ANCRDT_FNNCL_C,
        ATTRBTS_FLL[keep CD0060, CD0020, CD0030] as B
    );
    
FNNCL_CMPLTNSS <-
    check_datapoint(FNNCL_CHCK, completenessFinancial);


ACCNTNG_CHCK :=
    inner_join(
        ANCRDT_ACCNTNG_C,
        ATTRBTS_FLL[keep CD0039, CD0030, CD0040, CD0041, CD0050, CD0060] as B
    );
    
ACCNTNG_CMPLTNSS <-
    check_datapoint(ACCNTNG_CHCK, completenessAccounting);



INSTRMNT_PRTCTN_RCVD_CHK :=
    inner_join(
        ANCRDT_INSTRMNT_PRTCTN_RCVD_C,
        ATTRBTS_FLL[keep CD0060] as B
    );

INSTRMNT_PRTCTN_RCVD_CMPLNTNSS <-
    check_datapoint(INSTRMNT_PRTCTN_RCVD_CHK, completenessInstrumentProtection);
    
    
JNT_LBLTS_CHK :=
    inner_join(
        ANCRDT_JNT_LBLTS_C,
        ATTRBTS_FLL[keep CD0060] as B
    );
    
    
JNT_LBLTS_CMPLTNSS <-
    check_datapoint(JNT_LBLTS_CHK, completenessJointLiability);
    
    
PRTCN_INSTRMNT :=
    inner_join(
        ANCRDT_PRTCTN_RCVD_C,
        ANCRDT_INSTRMNT_PRTCTN_RCVD_C
    );


PRTCTN_RCVD_CHK := 
    inner_join(
        PRTCN_INSTRMNT,
        ATTRBTS_FLL[keep CD0060, CD0050] as B
    );
    
PRTCTN_RCVD_CMPLTNSS <-
    check_datapoint(PRTCTN_RCVD_CHK, completenessProtection);


//Assuming that we want to keep a true if for any of the instruments there is a true:
ATTRBTS_ENTTY := max(ATTRBTS_FLL group by DT_RFRNC, OBSRVD_AGNT_CD);



ENTTY_RSK_CHK := 
    inner_join(
        ANCRDT_ENTTY_RSK_C,
        ATTRBTS_ENTTY[keep CD0030, CD0039, CD0040, CD0170] as B
    );
    
ENTTY_RSK_CMPLTNSS <-
    check_datapoint(ENTTY_RSK_CHK, completenessEntityRisk);